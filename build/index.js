(function(a,b){'object'==typeof exports&&'object'==typeof module?module.exports=b():'function'==typeof define&&define.amd?define('inspector',[],b):'object'==typeof exports?exports.inspector=b():a.inspector=b()})('undefined'==typeof self?this:self,function(){return function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={i:d,l:!1,exports:{}};return a[d].call(e.exports,e,e.exports,b),e.l=!0,e.exports}var c={};return b.m=a,b.c=c,b.d=function(a,c,d){b.o(a,c)||Object.defineProperty(a,c,{configurable:!1,enumerable:!0,get:d})},b.n=function(a){var c=a&&a.__esModule?function(){return a['default']}:function(){return a};return b.d(c,'a',c),c},b.o=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)},b.p='',b(b.s=0)}([function(a,b,c){a.exports=c(1)},function(a,b,c){'use strict';Object.defineProperty(b,'__esModule',{value:!0});var d=c(2),e=c.n(d),f=c(3),g=c.n(f),h=function(){function a(a,b){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a}finally{try{!d&&h['return']&&h['return']()}finally{if(e)throw f}}return c}return function(b,c){if(Array.isArray(b))return b;if(Symbol.iterator in Object(b))return a(b,c);throw new TypeError('Invalid attempt to destructure non-iterable instance')}}(),i=(a)=>{a.factory('collector',({ifFn:a,strToFn:b,Is:c})=>(d,e=!1)=>{let f=d;if('function'==typeof d&&(f=[d]),!Array.isArray(f))throw new Error('collector must receive array');if(!f.length)return()=>!1;f=f.map((d)=>Array.isArray(d)?a(...d):c.string(d)?b(d):d);const g=(a)=>f.map((b)=>{try{return b(a)}catch(a){throw console.log('error in test ',b,a),a}});if(!e)return g;if(Array.isArray(e))return(a)=>{const b=g(a);var d=h(e,2);const f=d[0],i=d[1];return b.reduce(f,c.function(i)?i():i)};if('function'==typeof e)return(a)=>{const b=g(a);return b.reduce(e)};const i=(a)=>g(a).filter((b)=>!1!==b);return'and'===e?(a)=>f.reduce((b,c)=>{if(!b)return b;const d=c(a);return!1!==d&&[...b,d]},[]):'or'===e?(a)=>f.reduce((b,d)=>b?b:(c.function(d)||console.log('collector test is not a function: ',d),d(a)),!1):(a)=>{const b=i(a);return!!(0<b.length)&&b}})},j=(a)=>{a.factory('customFunctions',()=>new Map),a.factory('defineCustomFunction',({customFunctions:a,Is:b})=>(c,d)=>{if(!(c&&b.string(c)))throw new Error(`bad define name: ${c}`);if(!(d&&b.function(d)))throw new Error(`bad define function for ${c}`);a.set(c,d)}),a.factory('clearCustomFunctions',({customFunctions:a})=>()=>a.clear()),a.factory('strToFn',({customFunctions:a,Is:b})=>(c)=>{if(!(c&&b.string(c)))throw new Error(`bad strToFn name: ${c}`);if(a.has(c))return a.get(c);if(b[c])return b[c];throw new Error(`bad function string: ${c}`)})},k=(a)=>{a.factory('parseTests',({Is:a})=>(b,c)=>{let d;if(Array.isArray(b))d=c?b.map((b)=>a.function(b)||a.string(b)?[b,!1,c]:b):b;else if(a.object(b)){if(!c)throw new Error('cannot take an object as a validator without an onFail');d=Object.keys(b).map((a)=>[b[a],!1,c])}else('function'==typeof b||a.string(b))&&(d=c?[[b,!1,c]]:[b]);return d})},l=(a)=>{a.factory('argsToArray',()=>(...a)=>Array.isArray(a[0])?a[0]:a),a.factory('andFn',({collector:a,argsToArray:b})=>(...c)=>a(b(c),'and')),a.factory('orFn',({collector:a,argsToArray:b})=>(...c)=>a(b(c),'or'))};const m=/^fn:/;var n=(a)=>{a.factory('ifFn',({strToFn:a,Is:b})=>(c,d=!1,e=!1)=>{let f=c;if(b.string(c)&&(!e&&!d&&(e=`not an ${f}`),f=a(c)),!d&&!e)return f;let g=b.function(d)?d:b.string(d)&&m.test(d)?a(d.replace(m,'')):()=>d;let h;if(h=b.function(e)?e:b.string(e)&&m.test(e)?a(e.replace(m,'')):()=>e,!b.function(f))throw console.log('bad rule ',f,c,d,e),new Error('bad rule');return(a)=>{const b=f(a);return b?g(a,b):h(a,b)}})};const o=Symbol('required is not set'),p=Symbol('variable is absent');var q=(a)=>{a.factory('validator',({ifFn:a,collector:b,Is:c,parseTests:d})=>(e,f={})=>{var g=f.required;const h=g===void 0?o:g;var i=f.onFail;const j=d(e,i!==void 0&&i);if(!Array.isArray(j))throw console.log('tests not turned into an array:',e,j),new Error('cannot array-ify ',e);const k=j.map((b)=>Array.isArray(b)?a(...b):a(b));let l;if(!h)l=(c)=>b([a((b)=>b,p),b(k,'or')],'and')(c)[1]||!1;else if(h===o)l=b(k,'or');else{const a=c.string(h)?h:'required';k.unshift([(b)=>b,!1,a]),l=b(k,'or')}return(a)=>{let b=l(a);return b&&!Array.isArray(b)&&(b=[b]),b}})},r=()=>{const a=new e.a;return a.constant('Is',g.a),i(a),j(a),l(a),k(a),n(a),q(a),a};c.d(b,'ifFn',function(){return t}),c.d(b,'collector',function(){return u}),c.d(b,'validator',function(){return v}),c.d(b,'andFn',function(){return w}),c.d(b,'orFn',function(){return x}),c.d(b,'defineCustomFunction',function(){return y}),c.d(b,'factory',function(){return z});var s=r().container;const t=s.ifFn,u=s.collector,v=s.validator,w=s.andFn,x=s.orFn,y=s.defineCustomFunction,z=()=>r().container;b['default']=v},function(a){a.exports=require('bottlejs')},function(a){a.exports=require('is')}])});
//# sourceMappingURL=index.js.map