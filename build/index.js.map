{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 525b7dadfa9a9f9b9832","webpack:///./src/collector.js","webpack:///./src/customize.js","webpack:///./src/parseTests.js","webpack:///./src/bool.js","webpack:///./src/ifFn.js","webpack:///./src/constants.js","webpack:///./src/validator.js","webpack:///./src/bottle.js","webpack:///./src/index.js","webpack:///external \"bottlejs\""],"names":["bottle","lTests","Array","ifFn","Is","mapper","value","console","values","collector","a","reducer","fnResult","results","name","fn","customFunctions","testList","Object","ifFail","args","FN_RE","onFail","rule","strToFn","onSucceed","success","failure","result","REQUIRED_NOT_SET","Symbol","NOT_ABSENT","parseTests","validationTests","compound","requiredMsg","Bottle","customize","bool","validator","container","andFn","orFn","defineCustomFunction","factory"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"inspector\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"inspector\"] = factory();\n\telse\n\t\troot[\"inspector\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 525b7dadfa9a9f9b9832","\n\nexport default (bottle) => {\n  bottle.factory('collector', ({ ifFn, strToFn, Is }) => (tests, reducer = false) => {\n    let lTests = tests;\n    if (typeof tests === 'function') lTests = [tests];\n    if (!Array.isArray(lTests)) {\n      throw new Error('collector must receive array');\n    }\n    if (!lTests.length) return () => false;\n\n    lTests = lTests.map((crit) => {\n      if (Array.isArray(crit)) {\n        return ifFn(...crit);\n      }\n      return Is.string(crit) ? strToFn(crit) : crit;\n    });\n    const mapper = value => lTests.map((crit) => {\n      try {\n        return crit(value);\n      } catch (err) {\n        console.log('error in test ', crit, err);\n        throw err;\n      }\n    });\n\n    if (!reducer) return mapper;\n    if (Array.isArray(reducer)) {\n      return (value) => {\n        const values = mapper(value);\n        const [fn, initial] = reducer;\n        return values.reduce(fn, (Is.function(initial) ? initial() : initial));\n      };\n    } else if (typeof reducer === 'function') {\n      return (value) => {\n        const values = mapper(value);\n        return values.reduce(reducer);\n      };\n    }\n\n    const collector = value => mapper(value)\n      .filter(a => a !== false);\n\n    if (reducer === 'and') {\n      /**\n         * returns all the result until a false value is found,\n         * in which case false is returned.\n         * put another way, returns false unless all the tests\n         * fail (every test returns a result.)\n         * skips all the other tests. (all errors unless any success)\n         */\n      return value => lTests.reduce((results, fn) => {\n        if (!results) return results;\n        const fnResult = fn(value);\n        if (fnResult === false) return false;\n        return [...results, fnResult];\n      }, []);\n    } else if (reducer === 'or') {\n      /**\n         * returns the first positive result, skipping other tests\n         * (first error);\n         */\n      return value => lTests.reduce((result, fn) => {\n        if (result) return result;\n        if (!Is.function(fn)) {\n          console.log('collector test is not a function: ', fn);\n        }\n        return fn(value);\n      }, false);\n    }\n    /**\n       * returns false unless any of the tests return true,\n       * in which case all the test results are returned.\n       * like or, except it doesn't stop at the first positive result.\n       */\n    return (value) => {\n      const results = collector(value);\n      return results.length > 0 ? results : false;\n    };\n  });\n};\n\n\n/**\n\n To explain these here are the results for the same tests\n\n\n results          or            and          filter(default)\n -----------------------------------------------------\n\n []               false          false        false\n\n a b c d           a            [a b c d]    [a b c d]\n b c d\n not tested\n\n a => false b c d  b             false        [b c d]\n c d           b c d\n not tested    not tested\n\n a b c => false d  a             false        [a b d]\n b c d         d\n not tested    not tested\n\n */\n\n\n\n// WEBPACK FOOTER //\n// ./src/collector.js","/**\n * strToFnFactory returns a closured context in which a custom function collection can be generated.\n *\n * For \"quick and dirty\" global definitions the closured properties for a singleton instance of\n * one are exposed as module properties.\n * @returns {{define: define, strToFn: strToFn, customFunctions: Map<any, any>, clear: (function(): Map<any, any>)}}\n */\n\nexport default (bottle) => {\n  bottle.factory('customFunctions', () => new Map());\n\n  bottle.factory('defineCustomFunction', ({ customFunctions, Is }) => (name, fn) => {\n    if (!(name && Is.string(name))) throw new Error(`bad define name: ${name}`);\n    if (!(fn && Is.function(fn))) throw new Error(`bad define function for ${name}`);\n\n    customFunctions.set(name, fn);\n  });\n\n  bottle.factory('clearCustomFunctions', ({ customFunctions }) => () => customFunctions.clear());\n\n  bottle.factory('strToFn', ({ customFunctions, Is }) => (name) => {\n    if (!(name && Is.string(name))) throw new Error(`bad strToFn name: ${name}`);\n    if (customFunctions.has(name)) return customFunctions.get(name);\n    if (Is[name]) return Is[name];\n\n    throw new Error(`bad function string: ${name}`);\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/customize.js","\n\nexport default (bottle) => {\n  bottle.factory('parseTests', ({ Is }) => (tests, onFail) => {\n    let testList;\n    if (Array.isArray(tests)) {\n      if (onFail) {\n        testList = tests.map((testItem) => {\n          if (Is.function(testItem) || Is.string(testItem)) return [testItem, false, onFail];\n          return testItem;\n        });\n      } else {\n        testList = tests;\n      }\n    } else if (Is.object(tests)) {\n      if (!onFail) throw new Error('cannot take an object as a validator without an onFail');\n      testList = Object.keys(tests).map(ifFail => [tests[ifFail], false, onFail]);\n    } else if ((typeof tests === 'function') || (Is.string(tests))) {\n      if (onFail) {\n        testList = [[tests, false, onFail]];\n      } else {\n        testList = [tests];\n      }\n    }\n\n    return testList;\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/parseTests.js","\nexport default (bottle) => {\n  bottle.factory('argsToArray', () => (...args) => {\n    if (Array.isArray(args[0])) return args[0];\n    return args;\n  });\n\n  bottle.factory('andFn', ({ collector, argsToArray }) => (...tests) => collector(argsToArray(tests), 'and'));\n  bottle.factory('orFn', ({ collector, argsToArray }) => (...tests) => collector(argsToArray(tests), 'or'));\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/bool.js","const FN_RE = /^fn:/;\n\nexport default (bottle) => {\n  bottle.factory('ifFn', ({ strToFn, Is }) => (crit, onSucceed = false, onFail = false) => {\n    let rule = crit;\n    if (Is.string(crit)) {\n      if (!onFail && !onSucceed) onFail = `not an ${rule}`;\n      rule = strToFn(crit);\n    }\n    if (!onSucceed && !onFail) return rule;\n\n    let success;\n    if (Is.function(onSucceed)) {\n      success = onSucceed;\n    } else if (Is.string(onSucceed) && FN_RE.test(onSucceed)) {\n      success = strToFn(onSucceed.replace(FN_RE, ''));\n    } else {\n      success = () => onSucceed;\n    }\n    let failure;\n    if (Is.function(onFail)) {\n      failure = onFail;\n    } else if (Is.string(onFail) && FN_RE.test(onFail)) {\n      failure = strToFn(onFail.replace(FN_RE, ''));\n    } else {\n      failure = () => onFail;\n    }\n\n    if (!Is.function(rule)) {\n      console.log('bad rule ', rule, crit, onSucceed, onFail);\n      throw new Error('bad rule');\n    }\n    return (value) => {\n      const result = rule(value);\n      return (result ? success(value, result) : failure(value, result));\n    };\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/ifFn.js","/* eslint-disable import/prefer-default-export */\n\n\nexport const REQUIRED_NOT_SET = Symbol('required is not set');\n\nexport const NOT_ABSENT = Symbol('variable is absent');\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants.js","import { NOT_ABSENT, REQUIRED_NOT_SET } from './constants';\n\n/**\n * The tests passed in to Validator can be one of may formats:\n *\n * if it is an array:\n *    if onFail is set:\n *       each sub-array will be composed into an ifFn\n *       each function in tests will be composed into an ifFn, using onFail as the failure case\n *    otherwise:\n *       each sub-array will be composed into an ifFn\n *       each function will be returned un-altered\n * if it is a function\n *    if onFail is set\n *       the function will be composed into a one-item array of an ifFn\n *    else\n *       the function will be put in an array un-altered.\n *\n * so in sum, onFail will reverse the output of functions in an array,\n * or a single passed function.\n *\n */\n\nexport default (bottle) => {\n  bottle.factory('validator', ({\n    ifFn, collector, Is, parseTests,\n  }) => (tests, config = {}) => {\n    const { required = REQUIRED_NOT_SET, onFail = false } = config;\n    const testList = parseTests(tests, onFail);\n\n    if (!Array.isArray(testList)) {\n      console.log('tests not turned into an array:', tests, testList);\n      throw new Error('cannot array-ify ', tests);\n    }\n    const validationTests = testList.map((args) => {\n      if (Array.isArray(args)) return ifFn(...args);\n      return ifFn(args);\n    });\n    let compound;\n    if (!required) {\n      compound = value => collector(\n        [\n          ifFn(a => a, NOT_ABSENT),\n          collector(validationTests, 'or'),\n        ],\n        'and',\n      )(value)[1] || false;\n    } else if (required === REQUIRED_NOT_SET) {\n      compound = collector(validationTests, 'or');\n    } else {\n      const requiredMsg = (Is.string(required)) ? required : 'required';\n      validationTests.unshift([a => a, false, requiredMsg]);\n      compound = collector(validationTests, 'or');\n    }\n\n    return (value) => {\n      let result = compound(value);\n      if (result && !Array.isArray(result)) result = [result];\n      return result;\n    };\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/validator.js","import Bottle from 'bottlejs';\nimport Is from 'is';\n\nimport collector from './collector';\nimport customize from './customize';\nimport parseTests from './parseTests';\nimport bool from './bool';\nimport ifFn from './ifFn';\nimport validator from './validator';\n\nexport default () => {\n  const bottle = new Bottle();\n  bottle.constant('Is', Is);\n  collector(bottle);\n  customize(bottle);\n  bool(bottle);\n  parseTests(bottle);\n  ifFn(bottle);\n  validator(bottle);\n  return bottle;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/bottle.js","import bottle from './bottle';\n\nconst {\n  ifFn, collector, validator, andFn, orFn, defineCustomFunction,\n} = bottle().container;\n\nconst factory = () => (bottle().container);\n\nexport default validator;\nexport {\n  ifFn,\n  collector,\n  validator,\n  andFn,\n  orFn,\n  defineCustomFunction,\n  factory,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"bottlejs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bottlejs\"\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}