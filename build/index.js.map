{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 1bad0ab576b36fd4c798","webpack:///external \"is\"","webpack:///./src/ifFn.js","webpack:///./src/collector.js","webpack:///./src/constants.js","webpack:///./src/parseTests.js","webpack:///./src/validator.js","webpack:///./src/index.js"],"names":["Is","onFail","rule","success","failure","console","result","lTests","Array","crit","testModule","mapper","value","values","collector","a","reducer","fnResult","results","REQUIRED_NOT_SET","Symbol","NOT_ABSENT","testList","Object","ifFail","validationTests","ifFn","compound","requiredMsg","validator"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"inspector\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"inspector\"] = factory();\n\telse\n\t\troot[\"inspector\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1bad0ab576b36fd4c798","module.exports = require(\"is\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"is\"\n// module id = 0\n// module chunks = 0","import Is from 'is';\n\nconst ifFn = (crit, onSucceed = false, onFail = false) => {\n  let rule = crit;\n  if (Is.string(rule)) {\n    if (!onFail && !onSucceed) onFail = `not an ${rule}`;\n    rule = Is[rule];\n  }\n  if (!onSucceed && !onFail) return rule;\n\n  const success = Is.function(onSucceed) ? onSucceed : () => onSucceed;\n  const failure = Is.function(onFail) ? onFail : () => onFail;\n\n  if (!Is.function(rule)) {\n    console.log('bad rule ', rule, crit, onSucceed, onFail);\n    throw new Error('bad rule');\n  }\n  return (value) => {\n    const result = rule(value);\n    return (result ? success(value, result) : failure(value, result));\n  };\n};\n\nexport default ifFn;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ifFn.js","import Is from 'is';\nimport testModule from './ifFn';\n\nexport default (tests, reducer = false) => {\n  let lTests = tests;\n  if (typeof tests === 'function') lTests = [tests];\n  if (!Array.isArray(lTests)) {\n    throw new Error('collector must receive array');\n  }\n\n  if (!lTests.length) return () => false;\n\n  lTests = lTests.map(crit => (Array.isArray(crit) ? testModule(...crit) : crit));\n  const mapper = value => lTests.map((crit) => {\n    try {\n      return crit(value);\n    } catch (err) {\n      console.log('error in test ', crit, err);\n      throw err;\n    }\n  });\n\n  if (!reducer) return mapper;\n  if (Array.isArray(reducer)) {\n    return (value) => {\n      const values = mapper(value);\n      const [fn, initial] = reducer;\n      return values.reduce(fn, (Is.function(initial) ? initial() : initial));\n    };\n  } else if (typeof reducer === 'function') {\n    return (value) => {\n      const values = mapper(value);\n      return values.reduce(reducer);\n    };\n  }\n\n  const collector = value => mapper(value)\n    .filter(a => a !== false);\n\n  if (reducer === 'and') {\n    /**\n     * returns all the result until a false value is found,\n     * in which case false is returned.\n     * put another way, returns false unless all the tests\n     * fail (every test returns a result.)\n     * skips all the other tests. (all errors unless any success)\n     */\n    return value => lTests.reduce((results, fn) => {\n      if (!results) return results;\n      const fnResult = fn(value);\n      if (fnResult === false) return false;\n      return [...results, fnResult];\n    }, []);\n  } else if (reducer === 'or') {\n    /**\n     * returns the first positive result, skipping other tests\n     * (first error);\n     */\n    return value => lTests.reduce((result, fn) => {\n      if (result) return result;\n      if (!Is.function(fn)) {\n        console.log('collector test is not a function: ', fn);\n      }\n      return fn(value);\n    }, false);\n  }\n  /**\n     * returns false unless any of the tests return true,\n     * in which case all the test results are returned.\n     * like or, except it doesn't stop at the first positive result.\n     */\n  return (value) => {\n    const results = collector(value);\n    return results.length > 0 ? results : false;\n  };\n};\n\n\n/**\n\n To explain these here are the results for the same tests\n\n\n results          or            and          filter(default)\n -----------------------------------------------------\n\n []               false          false        false\n\n a b c d           a            [a b c d]    [a b c d]\n                   b c d\n                   not tested\n\n a => false b c d  b             false        [b c d]\n                   c d           b c d\n                   not tested    not tested\n\n a b c => false d  a             false        [a b d]\n                   b c d         d\n                   not tested    not tested\n\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/collector.js","/* eslint-disable import/prefer-default-export */\n\n\nexport const REQUIRED_NOT_SET = Symbol('required is not set');\n\nexport const NOT_ABSENT = Symbol('variable is absent');\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants.js","import Is from 'is';\n\n\nexport default (tests, onFail) => {\n  let testList;\n  if (Array.isArray(tests)) {\n    if (onFail) {\n      testList = tests.map((testItem) => {\n        if (Is.function(testItem) || Is.string(testItem)) return [testItem, false, onFail];\n        return testItem;\n      });\n    } else {\n      testList = tests;\n    }\n  } else if (Is.object(tests)) {\n    if (!onFail) throw new Error('cannot take an object as a validator without an onFail');\n    testList = Object.keys(tests).map(ifFail => [tests[ifFail], false, onFail]);\n  } else if ((typeof tests === 'function') || (Is.string(tests))) {\n    if (onFail) {\n      testList = [[tests, false, onFail]];\n    } else {\n      testList = [tests];\n    }\n  }\n\n  return testList;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/parseTests.js","import Is from 'is';\n\nimport { NOT_ABSENT, REQUIRED_NOT_SET } from './constants';\nimport collector from './collector';\nimport ifFn from './ifFn';\nimport parseTests from './parseTests';\n\n/**\n * The tests passed in to Validator can be one of may formats:\n *\n * if it is an array:\n *    if onFail is set:\n *       each sub-array will be composed into an ifFn\n *       each function in tests will be composed into an ifFn, using onFail as the failure case\n *    otherwise:\n *       each sub-array will be composed into an ifFn\n *       each function will be returned un-altered\n * if it is a function\n *    if onFail is set\n *       the function will be composed into a one-item array of an ifFn\n *    else\n *       the function will be put in an array un-altered.\n *\n * so in sum, onFail will reverse the output of functions in an array,\n * or a single passed function.\n *\n * @param tests {variant}\n * @param required {boolean?}\n * @param onFail {truthy string, optional}\n * @returns {function}\n */\nexport default (tests, config = {}) => {\n  const { required = REQUIRED_NOT_SET, onFail = false } = config;\n  const testList = parseTests(tests, onFail);\n\n  if (!Array.isArray(testList)) {\n    console.log('tests not turned into an array:', tests, testList);\n    throw new Error('cannot array-ify ', tests);\n  }\n  const validationTests = testList.map((args) => {\n    if (Array.isArray(args)) return ifFn(...args);\n    return ifFn(args);\n  });\n  let compound;\n  if (!required) {\n    compound = value => collector(\n      [\n        ifFn(a => a, NOT_ABSENT),\n        collector(validationTests, 'or'),\n      ],\n      'and',\n    )(value)[1] || false;\n  } else if (required === REQUIRED_NOT_SET) {\n    compound = collector(validationTests, 'or');\n  } else {\n    const requiredMsg = (Is.string(required)) ? required : 'required';\n    validationTests.unshift([a => a, false, requiredMsg]);\n    compound = collector(validationTests, 'or');\n  }\n\n  return (value) => {\n    let result = compound(value);\n    if (result && !Array.isArray(result)) result = [result];\n    return result;\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/validator.js","import ifFn from './ifFn';\nimport collector from './collector';\nimport validator from './validator';\n\nexport default validator;\n\nexport { ifFn, validator, collector };\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}